{"version":3,"sources":["logo.svg","query.js","rankingbar.js","MainComponent.js","App.js","reportWebVitals.js","index.js"],"names":["QueryComponent","props","React","useState","searchString","setSearchString","queryType","setQueryType","Container","className","Row","Col","SearchBar","submitFunction","Characters","handleImageClick","page","setPage","useEffect","type","console","log","variables","search","perPage","gqlString","gql","useQuery","a","request","characters","useCharacters","status","data","error","chararray","isFetching","isSuccess","totalPages","Media","nodes","pageInfo","lastPage","Page","xs","xl","fluid","message","map","character","index","Card","bg","DockImage","url","image","large","name","full","id","Button","variant","onClick","useDrag","item","collect","monitor","isDragging","drag","ref","src","alt","searchPlaceHolder","setSearchPlaceHolder","Form","onSubmit","e","preventDefault","InputGroup","DropdownButton","title","onSelect","Dropdown","Item","eventKey","FormControl","value","onChange","target","RankingBar","images","setImages","dropItem","to","barIndex","from","newImages","splice","handleRemoveRankingImage","useCallback","slice","useDrop","accept","drop","barindex","handleDropImage","isOver","canDrop","backgroundColor","style","RankBox","color","handleChange","handleBoxChange","text","RankingImage","handleRemove","boxColor","setBoxColor","setText","fontsize","setFontSize","clicked","setClicked","fontSize","Text","event","hex","presetColors","display","buttonStyle","setButtonStyle","end","onMouseEnter","onMouseLeave","MainComponent","screenshotRef","useRef","canvasVisible","setCanvasVisible","bars","setBars","handleBarChange","temp_bars","DndProvider","backend","window","TouchBackend","HTML5Backend","md","bar","ButtonGroup","newBar","length","String","fromCharCode","pushBar","newbars","pop","popBar","html2canvas","current","allowTaint","then","canvas","document","getElementById","remove","appendChild","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","queryClient","QueryClient","ReactDOM","render","StrictMode","QueryClientProvider","client"],"mappings":"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","file":"static/js/main.0642a817.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState, useEffect, Image } from \"react\";\nimport { FaArrowLeft, FaArrowRight} from \"react-icons/fa\";\nimport {useDrag } from 'react-dnd'\nimport {\n  useQuery,\n  useQueryClient,\n} from \"react-query\";\nimport { request, gql } from \"graphql-request\";\nimport \"./query.css\"\nimport { Dropdown, DropdownButton, Card, Row, Col, Container, Button, FormControl, InputGroup, Form } from 'react-bootstrap';\n\nconst endpoint = \"https://graphql.anilist.co\";\nexport default function QueryComponent(props) {\nconst [searchString, setSearchString] = React.useState(\"Madoka Magica\");\nconst [queryType, setQueryType] = React.useState(\"Anime\");\n  return (\n\t  <Container className=\"QueryContainer\">\n\t  <Row>\n\t  \t<Col>\n\t\t\t<SearchBar queryType={queryType} submitFunction={setSearchString} setQueryType={setQueryType} />\n\t\t</Col>\n\t  </Row>\n\t  <Row>\n\t  \t<Col>\n\t\t\t <Characters queryType={queryType} searchString={searchString} handleImageClick={props.handleImageClick} />\n\t\t</Col>\n\t  </Row>\n\n\n   </Container>\n  );\n}\n\n\nfunction useCharacters(searchString, type, page) {\n  console.log(type);\n  const variables= {\n\t search: searchString , perPage: 25, page:page,\n  }\n  var gqlString=gql``;\n  if(type==\"Anime\"){\n\t  gqlString= gql`\n\t  query AnimeCharacters($search: String $page: Int){\n   Media(search:$search, type: ANIME){\n     characters(sort: ROLE, page: $page, perPage: 25) {\n\t   pageInfo{\n\t\t   total\n\t\t   lastPage\n\t   },\n       nodes {\n         id,\n         name {\n             full\n         },\n         image {\n           large\n         },\n       }\n     }\n   }\n }\n\t  `\n  }\n  \telse {\n\t\tgqlString= gql`\n  \t  query Characters($search: String, $perPage: Int, $page: Int){\n  \t  Page(page: $page, perPage: $perPage){\n  \t    pageInfo{\n  \t      total\n  \t      currentPage\n\t\t  lastPage\n  \t    }\n  \t    characters(search:$search){\n  \t\t  id\n  \t      name {\n  \t        last\n  \t        first\n  \t\t\tfull\n  \t      }\n  \t      image {\n  \t        large\n  \t      }\n  \t    }\n  \t  }\n  \t}\n  \t  `\n  }\n  return useQuery([\"characters\", variables, type], async () => {\n    const\n      characters\n    = await request(\n      endpoint,\n     gqlString, variables\n    );\n    return characters;\n  });\n}\n\n\n\nfunction Characters(props) {\n  const [page, setPage] = useState(1);\n  useEffect(()=>{\n\t  setPage(1);\n  }, [props]);\n  const { status, data, error, isFetching, isSuccess } = useCharacters(props.searchString, props.queryType, page);\n  var chararray = [];\n  var totalPages = 1;\n  if(data){if(props.queryType==\"Anime\"){\n\t  if(data.Media) {\n\t\t  chararray=[...data.Media.characters.nodes];\n\t\t  totalPages=data.Media.characters.pageInfo.lastPage;\n\t\t  console.log(\"Pages: \"+ totalPages);\n\t\t  }\n  }\n  else {\n  \t if(data.Page) {\n\t\t chararray=[...data.Page.characters];\n\t\t totalPages=data.Page.pageInfo.lastPage;\n\t\t console.log(\"Pages: \"+ totalPages);\n\t }\n }}\n  return (\n      <Container >\n\t  <Row xs=\"auto\" xl=\"auto\" className=\"CharacterBar\" >\n\t  <Col fluid>\n        {status === \"loading\" ? (\n          \"Loading...\"\n        ) : status === \"error\" ? (\n          <span>Error: {error.message}</span>\n        ) : (\n          <>\n\t\t  \t<Row className=\"CharacterBarRow\">\n             {chararray.map((character,index)=>\n\t\t\t\t (\n\t\t\t\t<Col xl=\"auto\" xs=\"auto\" key={character.id}>\n\t\t\t\t<Card bg=\"black\" className=\"CharCard\" >\n\t\t\t\t <DockImage url={character.image.large} name={character.name.full} id={character.id} index={index}></DockImage>\n\t\t\t\t  <span className=\"CharName\">{character.name.full}</span>\n\n\t\t\t\t </Card>\n\t\t\t\t   </Col>\n                 ))}\n\t\t\t</Row>\n          </>\n        )}\n\t\t</Col>\n\t    </Row>\n\t\t<Row >\n\t\t\t<Col >\n\t\t\t\t<Button variant=\"outline-secondary mt-2\" onClick={()=>((page>1)?setPage(page-1):null)}><FaArrowLeft /></Button>\n\t\t\t</Col>\n\t\t\t<Col >\n\t\t\t\t<Button variant=\"outline-secondary mt-2\" onClick={()=>((page<totalPages)?setPage(page+1):null)}><FaArrowRight /></Button>\n\t\t\t</Col>\n\t\t</Row>\n      </Container>\n  );\n}\n\nfunction DockImage(props)\n{\n\tconst {url, name, index, id} = props;\n\tconst [{isDragging}, drag] = useDrag(()=>({\n\t\ttype: 'image',\n\t\titem: {id: id, name: name, url: url} ,\n\t\tcollect: (monitor) => ({\n\t\t\tisDragging: monitor.isDragging(),\n\t\t}),\n\t}));\n\treturn(\n\t\t<div ref={drag}>\n\t\t<img className=\"CharImg\" src={url} alt={name} index={index} key={id} / >\n\t\t</div>\n\t);\n}\n\nfunction SearchBar(props){\n\tconst [searchPlaceHolder, setSearchPlaceHolder] = React.useState(\"Madoka Magica\");\n\treturn(\n\n\t <Container className=\"searchBarContainer pt-2\" >\n\t <Form onSubmit={(e)=>{\n\t\t e.preventDefault();\n\t\t props.submitFunction(searchPlaceHolder);\n\t }}>\n\t <InputGroup className=\"mb-3\">\n\t <DropdownButton\n\t  title={props.queryType}\n\t  variant=\"outline-secondary\"\n\t  id=\"input-group-dropdown-1\"\n\t  onSelect={(e)=>props.setQueryType(e)}\n\t>\n\t  <Dropdown.Item eventKey=\"Anime\">Anime</Dropdown.Item>\n\t  <Dropdown.Item eventKey=\"Character\">Character</Dropdown.Item>\n\t</DropdownButton>\n\t\t<FormControl value={searchPlaceHolder} onChange={(e)=>{setSearchPlaceHolder(e.target.value)}}\n\t\t />\n\t  </InputGroup>\n\t </Form>\n\t </Container>\n\t);\n}\n\nfunction handleImageClick(){\n}\n// <img className=\"CharImg\" src={character.image.large} onClick={()=>props.handleImageClick(character.id, character.name.full, character.image.large)}/>\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport { CloseButton, Button, Container, Row, Col, Image, InputGroup, FormControl} from 'react-bootstrap';\nimport { DndProvider, useDrag, useDrop,   } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport { SketchPicker } from 'react-color';\n\nimport './rankingbar.css'\nimport update from 'immutability-helper';\n\n\nexport default function RankingBar(props)\n{\n\tconst [images, setImages] = useState([]);\n\tconst [dropLock, setDropLock] = useState(false);\n\tfunction handleDropImage(url, name, id, barindex){\n\n\t\t\tif(url && name && id)\n\t\t     {\n\t\t\t\t var image = {\n\t\t\t\t\t id: id,\n\t\t\t\t\t name: name,\n\t\t\t\t\t url: url,\n\t\t\t\t };\n\t\t\t\t \tconsole.log(\"url: \"+url+\" id: \"+id+\" name: \"+name);\n\t\t\t\t    setImages(images=>[...images, image]);\n\n\t\t\t}\n\n\t};\n\n\tfunction dropItem(item, to, barIndex){\n\t\tif(item.barIndex==props.barIndex)\n\t\t{\n\t\t\tlet from= item.index;\n\t\t\tconsole.log(\"from: \"+from+\" to: \"+to);\n\t\t\tlet newImages = [...images];\n\t\t\tlet item = newImages[from];\n\t\t\tnewImages.splice(from,1);\n\t\t\tnewImages.splice(to,0,item);\n\t\t\tsetImages(images=>[newImages]);\n\t}\n\t}\n\n\t// function handleRemoveRankingImage(index){\n\t//\n\t// \tsetImages(images=>update(images, {\n\t// \t\t$splice: [\n\t// \t\t\t[index, 1 ],\n\t// \t\t],\n\t// \t}));\n\t// \tconsole.log(\"Removing Image at Index \"+index+ \" \"+images[index].name);\n\t// \t// let array = [...images];\n\t// \t// array.splice(index,1);\n\t// \t// setImages(images=>([...array]));\n\t// };\n\tconst handleRemoveRankingImage = useCallback((index) =>{\n\t\t//\n\t\t// setImages(images=>update(images, {\n\t\t// \t$splice: [\n\t\t// \t\t[index, 1 ],\n\t\t// \t],\n\t\t// }));\n\t\t console.log(\"Removing Image at Index \"+index+ \" \"+images[index].name);\n\t\t// let array = [...images];\n\t\t// array.splice(index, 0);\n\t\t// console.log([...array]);\n\t\t// setImages(images=>([...array]));\n\t\tsetImages(images=>([...images.slice(0,index), ...images.slice(index+1)]));\n\t}, [images]);\n\tconst [{ canDrop, isOver }, drop] = useDrop(() => ({\n        accept: 'image',\n        drop: (item, monitor) => (\n\t\t\thandleDropImage(item.url, item.name, item.id, item.barIndex)\n\n\t\t),\n        collect: (monitor) => ({\n            isOver: monitor.isOver(),\n            canDrop: monitor.canDrop(),\n        }),\n    }));\n\n\t const isActive = canDrop && isOver;\n\t let backgroundColor = 'black';\n\t if (isActive) {\n\t\t backgroundColor = '#3fe74b';\n\t }\n\t else if (canDrop) {\n\t\t backgroundColor = '#3f92e7';\n\t }\n\t // return (\n\t\t//  <div ref={drop}  style={{backgroundColor }}>\n\t\t//  <Container className=\"RankingBar\" fluid>\n\t\t// \t <Row xs=\"auto\" xl=\"auto\" className=\"RankingRow\" noGutters>\n\t\t// \t <Col className=\"RankBoxCol\">\n\t\t// \t\t<RankBox color={props.color} text={props.text}></RankBox>\n\t\t// \t </Col>\n\t\t// \t <Col>\n\t\t// \t \t<Container  fluid>\n\t\t// \t \t\t<Row>\n\t\t// \t {\n\t //\n\t\t// \t\t images.map((image, index)=>\n\t\t// \t\t (\n\t\t// \t\t\t <Col key={index} className=\"RankingCol\" xl=\"auto\" xs=\"auto\">\n\t //\n\t\t// \t\t\t <Image className=\"RankingImage\" src={image.url} alt={image.name}  id={image.id} onClick={()=>{handleRemoveRankingImage(index)}}/>\n\t //\n\t //\n\t\t// \t\t\t </Col>\n\t\t// \t\t )\n\t\t// \t )\n\t\t// \t }\n\t\t// \t </Row>\n\t\t//  </Container>\n\t\t// \t </Col>\n\t\t// \t </Row>\n\t\t//  </Container>\n\t //\n\t\t//  </div>);\n\t\treturn (\n\t\t\t<div ref={drop}  style={{backgroundColor }}>\n\t\t\t<div className=\"RankingBar\">\n\t\t\t\t<div className=\"RankBoxCol\">\n\t\t\t\t   <RankBox color={props.color} index={props.index} handleChange={props.handleBoxChange} text={props.text}></RankBox>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"RankingImagesWrapper\">\n\n\t\t\t\t{\n\n\t\t\t\t\timages.map((image, index)=>\n\t\t\t\t\t(\n\t\t\t\t\t\t<div key={index} className=\"RankingImgWrapper\">\n\n\n\t\t\t\t\t\t<RankingImage url={image.url} name={image.name} barIndex={index} index={index} dropItem={dropItem} handleRemove={handleRemoveRankingImage} id={image.id}/>\n\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t\t}\n\n\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n}\n\nfunction RankBox(props){\n\tconst [boxColor, setBoxColor] = useState(props.color);\n\tconst [text, setText] = useState(props.text);\n\tconst [fontsize, setFontSize] = useState(30);\n\tfunction handleColorChange(color, event){\n\t\t// props.handleChange(props.index, color, props.text);\n\t\tsetBoxColor(color.hex);\n\t};\n\tconst [clicked, setClicked] = useState(false);\n\tif(clicked)\n\t{return(\n\t\t<div>\n\t\t\t<div className=\"RankBox\" style={{backgroundColor: boxColor, fontSize: \"\"+fontsize+\"px\"}}  onClick={()=>setClicked(false)}>{text}</div>\n\t\t\t<div>\n\t\t\t\t<InputGroup>\n\t\t\t\t\t<FormControl value={text} className=\"boxTextInput\" onChange={(e)=>{setText(e.target.value)}}></FormControl>\n\t\t\t\t\t<FormControl value={fontsize} type=\"number\" className=\"boxFontInput\" onChange={(e)=>{setFontSize(e.target.value)}}></FormControl>\n\t\t\t\t\t<InputGroup.Text id=\"inputGroup-sizing-sm\">px</InputGroup.Text>\n\t\t\t\t</InputGroup>\n\t\t\t\t<SketchPicker\n\t\t\t\t color={boxColor}\n\t\t\t\t onChange={handleColorChange}\n\t\t\t\t presetColors={[\"#ED254E\",\"#FE9000\",\"#FFDD4A\", \"#59CD90\",\"#4C5760\"]}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);}else{\n\t\treturn(<div className=\"RankBox\" style={{backgroundColor: boxColor, fontSize: \"\"+fontsize+\"px\"}} onClick={()=>setClicked(true)}>{text}</div>);\n\t}\n}\n\n\nfunction RankingImage(props)\n{\n\tconst {url, name, index, id, barIndex} = props;\n\tconst [buttonStyle, setButtonStyle] =useState({display: 'none'});\n\n\tconst [{isDragging}, drag] = useDrag(()=>({\n\t\ttype: 'image',\n\t\titem: {id: id, name: name, url: url, index: index, barIndex: barIndex } ,\n\t\tend: (item, monitor) => {\n           props.handleRemove(index);\n        },\n\t\tcollect: (monitor) => ({\n\t\t\tisDragging: monitor.isDragging(),\n\t\t}),\n\t}), [props]);\n\n\treturn(\n\t\t<div ref={drag} onMouseEnter={e => {\n                     setButtonStyle({display: 'block'});\n                 }}\n                 onMouseLeave={e => {\n                     setButtonStyle({display: 'none'})\n                 }} className=\"RankingImgWrapper\">\n\t\t<img src={url}  className=\"RankingImg\" alt={name} index={index} key={id} / >\n\t\t<button style={buttonStyle} className=\"DltButton\" onClick={()=>props.handleRemove(index)}>X</button>\n\t\t</div>\n\t);\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport {FaRegTrashAlt} from \"react-icons/fa\";\nimport {FiPlus, FiCamera} from \"react-icons/fi\";\nimport { TouchBackend } from 'react-dnd-touch-backend';\nimport {saveAs} from 'file-saver';\n// import domtoimage from 'dom-to-image';\n\nimport { CloseButton, Button, Container, Row, Col, Image, ButtonGroup} from 'react-bootstrap';\nimport { DndProvider, useDrag, useDrop } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport QueryComponent from './query.js'\nimport RankingBar from './rankingbar.js'\nimport download from 'downloadjs';\nimport html2canvas from 'html2canvas';\nimport './dock.css'\n\n\n\n\n const MainComponent=()=>{\n\tconst screenshotRef= useRef(null);\n\tconst canvasRef=useRef(null);\n\tconst[canvasVisible, setCanvasVisible] = useState(false);\n\tconst showScreenshot=()=>{\n\t\thtml2canvas(screenshotRef.current, {\n\t\t\tallowTaint: true,\n\t\t}).then((canvas)=>{\n\t\t\tdocument.getElementById('html2canvas')?.remove();\n\t\t\tcanvas.id='html2canvas';\n\t\t\tcanvas.className=\"ScreenshotCanvas\"\n\t\t\tdocument.getElementById(\"Overlay\").appendChild(canvas);\n\t\t\tsetCanvasVisible(true);\n\t\t});\n\t};\n\tconst[bars,setBars]=useState([\n\t\t{\n\t\t\tcolor: \"#ED254E\",\n\t\t\ttext: \"S\",\n\t\t},\n\t\t{\n\t\t\tcolor: \"#FE9000\",\n\t\t\ttext: \"A\",\n\t\t},\n\t\t{\n\t\t\tcolor: \"#FFDD4A\",\n\t\t\ttext: \"B\",\n\t\t},\n\t\t{\n\t\t\tcolor: \"#59CD90\",\n\t\t\ttext: \"C\",\n\t\t},\n\t\t{\n\t\t\tcolor: \"#4C5760\",\n\t\t\ttext: \"D\",\n\t\t},\n\t\t]);\n\n\tfunction pushBar(){\n\t\tvar newBar;\n\t\tswitch(bars.length){\n\t\t\tcase 0:\n\t\t\t\tnewBar = {\n\t\t\t\t\tcolor: \"#ED254E\",\n\t\t\t\t\ttext: \"S\",\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tnewBar = {\n\t\t\t\t\tcolor: \"#FE9000\",\n\t\t\t\t\ttext: \"A\",\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tnewBar = {\n\t\t\t\t\tcolor: \"#FFDD4A\",\n\t\t\t\t\ttext: \"B\",\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tnewBar ={\n\t\t\t\t\tcolor: \"#59CD90\",\n\t\t\t\t\ttext: \"C\",\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tnewBar = {\n\t\t\t\t\tcolor: \"#4C5760\",\n\t\t\t\t\ttext: \"D\",\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tnewBar = {\n\t\t\t\t\tcolor: \"#4C5760\",\n\t\t\t\t\ttext: bars.length<26? String.fromCharCode(64+bars.length) : \"?\",\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t}\n\t\tsetBars(bars=>[...bars, newBar,]);\n\t};\n\n\tfunction popBar(){\n\t\tlet newbars = [...bars];\n\t\tnewbars.pop();\n\t\tsetBars(bars=>[...newbars]);\n\t};\n\tfunction handleBarChange(index, color, text){\n\t \tlet temp_bars = [...bars];\n\t\ttemp_bars[index] = {\n\t\t\tcolor: color,\n\t\t\ttext: text\n\t\t};\n\t\tsetBars(bars=>[...temp_bars]);\n\t};\n\n\treturn(\n\t\t<DndProvider backend={('ontouchstart' in window)? \tTouchBackend : HTML5Backend}>\n\t<div className=\"ScreenshotOverlay\" id=\"Overlay\"\n\t\t\tstyle={{display: canvasVisible? \"flex\":\"none\"}}\n\t\t\tonClick={()=>setCanvasVisible(false)}\n\t\t>\n\t\t\t</div>\t\t\n\t\t<Container fluid>\n\t\t\t<Row>\n\t\t\t\t<Col md=\"auto\" className=\"QueryColumn\">\n\t\t\t\t\t<QueryComponent></QueryComponent>\n\t\t\t\t</Col>\n\t\t\t\t\t\t<Col className=\"ChartContainer\">\n\t\t\t\t\t\t\t<div className=\"ChartContainerBarsWrapper\">\n\t\t\t\t\t\t\t<div ref={screenshotRef} id=\"ScreenshotElement\" >\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tbars.map((bar,index)=>(\n\t\t\t\t\t\t\t\t\t<Row key={index}>\n\t\t\t\t\t\t\t\t\t<Col >\n\t\t\t\t\t\t\t\t\t\t<RankingBar color={bar.color} text={bar.text} index={index} handleBoxChange={handleBarChange}></RankingBar>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<Row className=\"justify-content-md-end\">\n\t\t\t\t\t\t\t<Col  md=\"auto\">\n\t\t\t\t\t\t\t\t<ButtonGroup className=\"mr-4 pt-4\">\n\t\t\t\t\t\t\t\t\t<Button variant=\"outline-secondary\" onClick={()=>pushBar()}><FiPlus /></Button>\n\t\t\t\t\t\t\t\t\t<Button variant=\"outline-secondary\" onClick={()=>popBar()}><FaRegTrashAlt /></Button>\n\t\t\t\t\t\t\t\t\t<Button onClick={()=>showScreenshot()}\n\t\t\t\t\t\t\t\t\tvariant=\"outline-secondary\"><FiCamera /></Button>\n\t\t\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\n\t\t\t\t\t\t\t</Col>\n\n\t\t\t</Row>\n\t\t</Container>\n\t\t</DndProvider>\n\t);\n};\nexport default MainComponent;\n","import logo from './logo.svg';\nimport './App.css';\nimport MainComponent from './MainComponent.js'\nfunction App() {\n  return (\n\n    <div className=\"App\">\n   <MainComponent />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n const queryClient = new QueryClient();\nReactDOM.render(\n  <React.StrictMode>\n  <QueryClientProvider client={queryClient}>\n    <App />\n\t</QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}