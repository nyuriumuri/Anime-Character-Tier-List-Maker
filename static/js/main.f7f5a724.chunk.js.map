{"version":3,"sources":["logo.svg","query.js","rankingbar.js","MainComponent.js","App.js","reportWebVitals.js","index.js"],"names":["QueryComponent","props","React","useState","searchString","setSearchString","queryType","setQueryType","Container","className","fluid","Row","Col","SearchBar","submitFunction","Characters","handleImageClick","page","setPage","useEffect","type","console","log","variables","search","perPage","gqlString","gql","useQuery","a","request","characters","useCharacters","status","data","error","chararray","isFetching","isSuccess","totalPages","Media","nodes","pageInfo","lastPage","Page","xs","xl","message","map","character","index","Card","bg","DockImage","url","image","large","name","full","id","Button","variant","onClick","useDrag","item","collect","monitor","isDragging","drag","ref","src","alt","searchPlaceHolder","setSearchPlaceHolder","Form","onSubmit","e","preventDefault","InputGroup","DropdownButton","title","onSelect","Dropdown","Item","eventKey","FormControl","value","onChange","target","RankingBar","images","setImages","dropItem","to","barIndex","from","newImages","splice","handleRemoveRankingImage","useCallback","slice","useDrop","accept","drop","barindex","handleDropImage","isOver","canDrop","backgroundColor","style","RankBox","color","handleChange","handleBoxChange","text","RankingImage","handleRemove","boxColor","setBoxColor","setText","fontsize","setFontSize","clicked","setClicked","fontSize","Text","event","hex","presetColors","display","buttonStyle","setButtonStyle","end","onMouseEnter","onMouseLeave","MainComponent","bars","setBars","handleBarChange","temp_bars","DndProvider","backend","window","TouchBackend","HTML5Backend","md","bar","ButtonGroup","newBar","length","String","fromCharCode","pushBar","newbars","pop","popBar","domtoimage","toBlob","document","getElementById","then","blob","saveAs","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","queryClient","QueryClient","ReactDOM","render","StrictMode","QueryClientProvider","client"],"mappings":"gUAAe,I,6QCaA,SAASA,EAAeC,GACvC,MAAwCC,IAAMC,SAAS,iBAAvD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAkCH,IAAMC,SAAS,SAAjD,mBAAOG,EAAP,KAAkBC,EAAlB,KACE,OACC,eAACC,EAAA,EAAD,CAAWC,UAAU,iBAAiBC,OAAK,EAA3C,UACA,cAACC,EAAA,EAAD,UACC,cAACC,EAAA,EAAD,UACD,cAACC,EAAD,CAAWP,UAAWA,EAAWQ,eAAgBT,EAAiBE,aAAcA,QAGhF,cAACI,EAAA,EAAD,UACC,cAACC,EAAA,EAAD,UACA,cAACG,EAAD,CAAYT,UAAWA,EAAWF,aAAcA,EAAcY,iBAAkBf,EAAMe,0BA4E1F,SAASD,EAAWd,GAClB,MAAwBE,mBAAS,GAAjC,mBAAOc,EAAP,KAAaC,EAAb,KACAC,qBAAU,WACTD,EAAQ,KACN,CAACjB,IACJ,MAvEF,SAAuBG,EAAcgB,EAAMH,GACzCI,QAAQC,IAAIF,GACZ,IAAMG,EAAW,CACjBC,OAAQpB,EAAeqB,QAAS,GAAIR,KAAKA,GAErCS,EAAUC,cAAD,0BAgDb,OA9CCD,EADQ,SAANN,EACSO,cAAF,6YAuBCA,cAAF,2bAuBFC,YAAS,CAAC,aAAcL,EAAWH,GAA3B,sBAAkC,4BAAAS,EAAA,sEAGvCC,kBA/EK,6BAiFZJ,EAAWH,GALmC,cAE7CQ,EAF6C,yBAOxCA,GAPwC,4CAkBMC,CAAc/B,EAAMG,aAAcH,EAAMK,UAAWW,GAAlGgB,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,KAAMC,EAAtB,EAAsBA,MAClBC,GADJ,EAA6BC,WAA7B,EAAyCC,UACzB,IACZC,EAAa,EAejB,OAdGL,IAA0B,SAAjBjC,EAAMK,UACd4B,EAAKM,QACPJ,EAAU,YAAIF,EAAKM,MAAMT,WAAWU,OACpCF,EAAWL,EAAKM,MAAMT,WAAWW,SAASC,SAC1CtB,QAAQC,IAAI,UAAWiB,IAIpBL,EAAKU,OACTR,EAAU,YAAIF,EAAKU,KAAKb,YACxBQ,EAAWL,EAAKU,KAAKF,SAASC,SAC9BtB,QAAQC,IAAI,UAAWiB,KAIpB,eAAC/B,EAAA,EAAD,CAAWC,UAAU,eAArB,UACH,cAACE,EAAA,EAAD,CAAKkC,GAAG,OAAOC,GAAG,OAAOrC,UAAU,kBAAnC,SACA,cAACG,EAAA,EAAD,CAAKF,OAAK,EAAV,SACiB,YAAXuB,EACC,aACa,UAAXA,EACF,2CAAcE,EAAMY,WAEpB,mCACL,cAACpC,EAAA,EAAD,CAAKF,UAAU,kBAAf,SACS2B,EAAUY,KAAI,SAACC,EAAUC,GAAX,OAExB,cAACtC,EAAA,EAAD,CAAKkC,GAAG,OAAOD,GAAG,OAAlB,SACA,eAACM,EAAA,EAAD,CAAMC,GAAG,QAAQ3C,UAAU,WAA3B,UACC,cAAC4C,EAAD,CAAWC,IAAKL,EAAUM,MAAMC,MAAOC,KAAMR,EAAUQ,KAAKC,KAAMC,GAAIV,EAAUU,GAAIT,MAAOA,IAC1F,sBAAMzC,UAAU,WAAhB,SAA4BwC,EAAUQ,KAAKC,WAHfT,EAAUU,eAa1C,eAAChD,EAAA,EAAD,WACC,cAACC,EAAA,EAAD,UACC,cAACgD,EAAA,EAAD,CAAQC,QAAQ,oBAAoBC,QAAS,kBAAM7C,EAAK,EAAGC,EAAQD,EAAK,GAAG,MAA3E,SAAkF,cAAC,IAAD,QAEnF,cAACL,EAAA,EAAD,UACC,cAACgD,EAAA,EAAD,CAAQC,QAAQ,oBAAoBC,QAAS,kBAAM7C,EAAKsB,EAAYrB,EAAQD,EAAK,GAAG,MAApF,SAA2F,cAAC,IAAD,cAO/F,SAASoC,EAAUpD,GAElB,IAAOqD,EAAwBrD,EAAxBqD,IAAKG,EAAmBxD,EAAnBwD,KAAMP,EAAajD,EAAbiD,MAAOS,EAAM1D,EAAN0D,GACzB,EAA6BI,aAAQ,iBAAK,CACzC3C,KAAM,QACN4C,KAAM,CAACL,GAAIA,EAAIF,KAAMA,EAAMH,IAAKA,GAChCW,QAAS,SAACC,GAAD,MAAc,CACtBC,WAAYD,EAAQC,mBAJtB,mBAAqBC,GAArB,KAAQD,WAAR,MAOA,OACC,qBAAKE,IAAKD,EAAV,SACA,qBAAK3D,UAAU,UAAU6D,IAAKhB,EAAKiB,IAAKd,EAAMP,MAAOA,GAAYS,KAKnE,SAAS9C,EAAUZ,GAClB,MAAkDC,IAAMC,SAAS,iBAAjE,mBAAOqE,EAAP,KAA0BC,EAA1B,KACA,OAEC,cAACjE,EAAA,EAAD,CAAWC,UAAU,qBAArB,SACA,cAACiE,EAAA,EAAD,CAAMC,SAAU,SAACC,GAChBA,EAAEC,iBACF5E,EAAMa,eAAe0D,IAFtB,SAIA,eAACM,EAAA,EAAD,CAAYrE,UAAU,OAAtB,UACA,eAACsE,EAAA,EAAD,CACCC,MAAO/E,EAAMK,UACbuD,QAAQ,oBACRF,GAAG,yBACHsB,SAAU,SAACL,GAAD,OAAK3E,EAAMM,aAAaqE,IAJnC,UAMC,cAACM,EAAA,EAASC,KAAV,CAAeC,SAAS,QAAxB,mBACA,cAACF,EAAA,EAASC,KAAV,CAAeC,SAAS,YAAxB,0BAED,cAACC,EAAA,EAAD,CAAaC,MAAOd,EAAmBe,SAAU,SAACX,GAAKH,EAAqBG,EAAEY,OAAOF,iB,oCC3LxE,SAASG,EAAWxF,GAElC,MAA4BE,mBAAS,IAArC,mBAAOuF,EAAP,KAAeC,EAAf,KACA,EAAgCxF,oBAAS,GAAzC,6BAiBA,SAASyF,EAAS5B,EAAM6B,EAAIC,GAC3B,GAAG9B,EAAK8B,UAAU7F,EAAM6F,SACxB,CACC,IAAIC,EAAM/B,EAAKd,MACf7B,QAAQC,IAAI,SAASyE,EAAK,QAAQF,GAClC,IAAIG,EAAS,YAAON,GAChB1B,EAAOgC,EAAUD,GACrBC,EAAUC,OAAOF,EAAK,GACtBC,EAAUC,OAAOJ,EAAG,EAAE7B,GACtB2B,GAAU,SAAAD,GAAM,MAAE,CAACM,OAgBrB,IAAME,EAA2BC,uBAAY,SAACjD,GAO5C7B,QAAQC,IAAI,2BAA2B4B,EAAO,IAAIwC,EAAOxC,GAAOO,MAKjEkC,GAAU,SAAAD,GAAM,4BAAOA,EAAOU,MAAM,EAAElD,IAAtB,YAAiCwC,EAAOU,MAAMlD,EAAM,UAClE,CAACwC,IACJ,EAAoCW,aAAQ,iBAAO,CAC5CC,OAAQ,QACRC,KAAM,SAACvC,EAAME,GAAP,OAzDb,SAAyBZ,EAAKG,EAAME,EAAI6C,GAEtC,GAAGlD,GAAOG,GAAQE,EACd,CACF,IAAIJ,EAAQ,CACXI,GAAIA,EACJF,KAAMA,EACNH,IAAKA,GAELjC,QAAQC,IAAI,QAAQgC,EAAI,QAAQK,EAAG,UAAUF,GAC3CkC,GAAU,SAAAD,GAAM,4BAAMA,GAAN,CAAcnC,QAgDnCkD,CAAgBzC,EAAKV,IAAKU,EAAKP,KAAMO,EAAKL,GAAIK,EAAK8B,WAG9C7B,QAAS,SAACC,GAAD,MAAc,CACnBwC,OAAQxC,EAAQwC,SAChBC,QAASzC,EAAQyC,gBAR5B,0BAASA,EAAT,EAASA,QAASD,EAAlB,EAAkBA,OAAUH,EAA5B,KAaKK,EAAkB,QAqCtB,OAtCiBD,GAAWD,EAG3BE,EAAkB,UAEVD,IACRC,EAAkB,WAiClB,qBAAKvC,IAAKkC,EAAOM,MAAO,CAACD,mBAAzB,SACA,sBAAKnG,UAAU,aAAf,UACC,qBAAKA,UAAU,aAAf,SACG,cAACqG,EAAD,CAASC,MAAO9G,EAAM8G,MAAO7D,MAAOjD,EAAMiD,MAAO8D,aAAc/G,EAAMgH,gBAAiBC,KAAMjH,EAAMiH,SAErG,qBAAKzG,UAAU,uBAAf,SAICiF,EAAO1C,KAAI,SAACO,EAAOL,GAAR,OAEV,qBAAiBzC,UAAU,oBAA3B,SAGA,cAAC0G,EAAD,CAAc7D,IAAKC,EAAMD,IAAKG,KAAMF,EAAME,KAAMqC,SAAU5C,EAAOA,MAAOA,EAAO0C,SAAUA,EAAUwB,aAAclB,EAA0BvC,GAAIJ,EAAMI,MAH3IT,aAiBhB,SAAS4D,EAAQ7G,GAChB,MAAgCE,mBAASF,EAAM8G,OAA/C,mBAAOM,EAAP,KAAiBC,EAAjB,KACA,EAAwBnH,mBAASF,EAAMiH,MAAvC,mBAAOA,EAAP,KAAaK,EAAb,KACA,EAAgCpH,mBAAS,IAAzC,mBAAOqH,EAAP,KAAiBC,EAAjB,KAKA,MAA8BtH,oBAAS,GAAvC,mBAAOuH,EAAP,KAAgBC,EAAhB,KACA,OAAGD,EAEF,gCACC,qBAAKjH,UAAU,UAAUoG,MAAO,CAACD,gBAAiBS,EAAUO,SAAaJ,EAAS,MAAQ1D,QAAS,kBAAI6D,GAAW,IAAlH,SAA2HT,IAC3H,gCACC,eAACpC,EAAA,EAAD,WACC,cAACO,EAAA,EAAD,CAAaC,MAAO4B,EAAMzG,UAAU,eAAe8E,SAAU,SAACX,GAAK2C,EAAQ3C,EAAEY,OAAOF,UACpF,cAACD,EAAA,EAAD,CAAaC,MAAOkC,EAAUpG,KAAK,SAASX,UAAU,eAAe8E,SAAU,SAACX,GAAK6C,EAAY7C,EAAEY,OAAOF,UAC1G,cAACR,EAAA,EAAW+C,KAAZ,CAAiBlE,GAAG,uBAApB,mBAED,cAAC,IAAD,CACCoD,MAAOM,EACP9B,SAjBJ,SAA2BwB,EAAOe,GAEjCR,EAAYP,EAAMgB,MAgBfC,aAAc,CAAC,UAAU,UAAU,UAAW,UAAU,mBAKpD,qBAAKvH,UAAU,UAAUoG,MAAO,CAACD,gBAAiBS,EAAUO,SAAaJ,EAAS,MAAO1D,QAAS,kBAAI6D,GAAW,IAAjH,SAAyHT,IAKlI,SAASC,EAAalH,GAErB,IAAOqD,EAAkCrD,EAAlCqD,IAAKG,EAA6BxD,EAA7BwD,KAAMP,EAAuBjD,EAAvBiD,MAAOS,EAAgB1D,EAAhB0D,GAAImC,EAAY7F,EAAZ6F,SAC7B,EAAqC3F,mBAAS,CAAC8H,QAAS,SAAxD,mBAAOC,EAAP,KAAoBC,EAApB,KAEA,EAA6BpE,aAAQ,iBAAK,CACzC3C,KAAM,QACN4C,KAAM,CAACL,GAAIA,EAAIF,KAAMA,EAAMH,IAAKA,EAAKJ,MAAOA,EAAO4C,SAAUA,GAC7DsC,IAAK,SAACpE,EAAME,GACHjE,EAAMmH,aAAalE,IAE5Be,QAAS,SAACC,GAAD,MAAc,CACtBC,WAAYD,EAAQC,kBAElB,CAAClE,IATL,mBAAqBmE,GAArB,KAAQD,WAAR,MAWA,OACC,sBAAKE,IAAKD,EAAMiE,aAAc,SAAAzD,GACXuD,EAAe,CAACF,QAAS,WAE7BK,aAAc,SAAA1D,GACVuD,EAAe,CAACF,QAAS,UAC1BxH,UAAU,oBAL5B,UAMA,qBAAK6D,IAAKhB,EAAM7C,UAAU,aAAa8D,IAAKd,EAAMP,MAAOA,GAAYS,GACrE,wBAAQkD,MAAOqB,EAAazH,UAAU,YAAYqD,QAAS,kBAAI7D,EAAMmH,aAAalE,IAAlF,kB,kBCpEaqF,EA3HM,WAEpB,MAAoBpI,mBAAS,CAC5B,CACC4G,MAAO,UACPG,KAAM,KAEP,CACCH,MAAO,UACPG,KAAM,KAEP,CACCH,MAAO,UACPG,KAAM,KAEP,CACCH,MAAO,UACPG,KAAM,KAEP,CACCH,MAAO,UACPG,KAAM,OAnBR,mBAAMsB,EAAN,KAAWC,EAAX,KAuEA,SAASC,EAAgBxF,EAAO6D,EAAOG,GACrC,IAAIyB,EAAS,YAAOH,GACrBG,EAAUzF,GAAS,CAClB6D,MAAOA,EACPG,KAAMA,GAEPuB,GAAQ,SAAAD,GAAI,mBAAMG,MAEnB,OACC,cAACC,EAAA,EAAD,CAAaC,QAAU,iBAAkBC,OAAUC,IAAeC,IAAlE,SACA,cAACxI,EAAA,EAAD,CAAWE,OAAK,EAAhB,SACC,eAACC,EAAA,EAAD,WACC,cAACC,EAAA,EAAD,CAAKqI,GAAG,OAAOxI,UAAU,cAAzB,SACC,cAACT,EAAD,MAEC,eAACY,EAAA,EAAD,CAAKH,UAAU,iBAAf,UACC,qBAAKA,UAAU,4BAAf,SACA,qBAAKkD,GAAG,oBAAR,SAEC6E,EAAKxF,KAAI,SAACkG,EAAIhG,GAAL,OACR,cAACvC,EAAA,EAAD,UACA,cAACC,EAAA,EAAD,UACC,cAAC6E,EAAD,CAAYsB,MAAOmC,EAAInC,MAAOG,KAAMgC,EAAIhC,KAAMhE,MAAOA,EAAO+D,gBAAiByB,OAFpExF,UASZ,cAACvC,EAAA,EAAD,CAAKF,UAAU,yBAAf,SACA,cAACG,EAAA,EAAD,CAAMqI,GAAG,OAAT,SACC,eAACE,EAAA,EAAD,CAAa1I,UAAU,YAAvB,UACC,cAACmD,EAAA,EAAD,CAAQC,QAAQ,oBAAoBC,QAAS,kBAhFrD,WACC,IAAIsF,EACJ,OAAOZ,EAAKa,QACX,KAAK,EACJD,EAAS,CACRrC,MAAO,UACPG,KAAM,KAEP,MACD,KAAK,EACJkC,EAAS,CACRrC,MAAO,UACPG,KAAM,KAEP,MACD,KAAK,EACJkC,EAAS,CACRrC,MAAO,UACPG,KAAM,KAEP,MACD,KAAK,EACJkC,EAAQ,CACPrC,MAAO,UACPG,KAAM,KAEP,MACD,KAAK,EACJkC,EAAS,CACRrC,MAAO,UACPG,KAAM,KAEP,MACD,QACCkC,EAAS,CACRrC,MAAO,UACPG,KAAMsB,EAAKa,OAAO,GAAIC,OAAOC,aAAa,GAAGf,EAAKa,QAAU,KAI/DZ,GAAQ,SAAAD,GAAI,4BAAMA,GAAN,CAAYY,OAwCgCI,IAAjD,SAA4D,cAAC,IAAD,MAC5D,cAAC5F,EAAA,EAAD,CAAQC,QAAQ,oBAAoBC,QAAS,kBAtCrD,WACC,IAAI2F,EAAO,YAAOjB,GAClBiB,EAAQC,MACRjB,GAAQ,SAAAD,GAAI,mBAAMiB,MAmCsCE,IAAjD,SAA2D,cAAC,IAAD,MAC3D,cAAC/F,EAAA,EAAD,CAAQE,QAAS,kBAAI8F,IAAWC,OAAOC,SAASC,eAAe,sBAC3DC,MAAK,SAAUC,GACZC,iBAAOD,EAAM,iBAEpBpG,QAAQ,oBAJR,SAI4B,cAAC,IAAD,wBChHtBsG,MATf,WACE,OAEE,qBAAK1J,UAAU,MAAf,SACD,cAAC,EAAD,OCKY2J,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBN,MAAK,YAAkD,IAA/CO,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAPO,G,OAAc,IAAIC,KACzBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACA,cAACC,EAAA,EAAD,CAAqBC,OAAQN,EAA7B,SACE,cAAC,EAAD,QAGFd,SAASC,eAAe,SAM1BK,M","file":"static/js/main.f7f5a724.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useState, useEffect, Image } from \"react\";\r\nimport { FaArrowLeft, FaArrowRight} from \"react-icons/fa\";\r\nimport {useDrag } from 'react-dnd'\r\nimport {\r\n  useQuery,\r\n  useQueryClient,\r\n} from \"react-query\";\r\nimport { request, gql } from \"graphql-request\";\r\nimport \"./query.css\"\r\nimport { Dropdown, DropdownButton, Card, Row, Col, Container, Button, FormControl, InputGroup, Form } from 'react-bootstrap';\r\n\r\nconst endpoint = \"https://graphql.anilist.co\";\r\nexport default function QueryComponent(props) {\r\nconst [searchString, setSearchString] = React.useState(\"Madoka Magica\");\r\nconst [queryType, setQueryType] = React.useState(\"Anime\");\r\n  return (\r\n\t  <Container className=\"QueryContainer\" fluid>\r\n\t  <Row>\r\n\t  \t<Col>\r\n\t\t\t<SearchBar queryType={queryType} submitFunction={setSearchString} setQueryType={setQueryType} />\r\n\t\t</Col>\r\n\t  </Row>\r\n\t  <Row>\r\n\t  \t<Col>\r\n\t\t\t <Characters queryType={queryType} searchString={searchString} handleImageClick={props.handleImageClick} />\r\n\t\t</Col>\r\n\t  </Row>\r\n\r\n\r\n   </Container>\r\n  );\r\n}\r\n\r\n\r\nfunction useCharacters(searchString, type, page) {\r\n  console.log(type);\r\n  const variables= {\r\n\t search: searchString , perPage: 25, page:page,\r\n  }\r\n  var gqlString=gql``;\r\n  if(type==\"Anime\"){\r\n\t  gqlString= gql`\r\n\t  query AnimeCharacters($search: String $page: Int){\r\n   Media(search:$search, type: ANIME){\r\n     characters(sort: ROLE, page: $page, perPage: 25) {\r\n\t   pageInfo{\r\n\t\t   total\r\n\t\t   lastPage\r\n\t   },\r\n       nodes {\r\n         id,\r\n         name {\r\n             full\r\n         },\r\n         image {\r\n           large\r\n         },\r\n       }\r\n     }\r\n   }\r\n }\r\n\t  `\r\n  }\r\n  \telse {\r\n\t\tgqlString= gql`\r\n  \t  query Characters($search: String, $perPage: Int, $page: Int){\r\n  \t  Page(page: $page, perPage: $perPage){\r\n  \t    pageInfo{\r\n  \t      total\r\n  \t      currentPage\r\n\t\t  lastPage\r\n  \t    }\r\n  \t    characters(search:$search){\r\n  \t\t  id\r\n  \t      name {\r\n  \t        last\r\n  \t        first\r\n  \t\t\tfull\r\n  \t      }\r\n  \t      image {\r\n  \t        large\r\n  \t      }\r\n  \t    }\r\n  \t  }\r\n  \t}\r\n  \t  `\r\n  }\r\n  return useQuery([\"characters\", variables, type], async () => {\r\n    const\r\n      characters\r\n    = await request(\r\n      endpoint,\r\n     gqlString, variables\r\n    );\r\n    return characters;\r\n  });\r\n}\r\n\r\n\r\n\r\nfunction Characters(props) {\r\n  const [page, setPage] = useState(1);\r\n  useEffect(()=>{\r\n\t  setPage(1);\r\n  }, [props]);\r\n  const { status, data, error, isFetching, isSuccess } = useCharacters(props.searchString, props.queryType, page);\r\n  var chararray = [];\r\n  var totalPages = 1;\r\n  if(data){if(props.queryType==\"Anime\"){\r\n\t  if(data.Media) {\r\n\t\t  chararray=[...data.Media.characters.nodes];\r\n\t\t  totalPages=data.Media.characters.pageInfo.lastPage;\r\n\t\t  console.log(\"Pages: \"+ totalPages);\r\n\t\t  }\r\n  }\r\n  else {\r\n  \t if(data.Page) {\r\n\t\t chararray=[...data.Page.characters];\r\n\t\t totalPages=data.Page.pageInfo.lastPage;\r\n\t\t console.log(\"Pages: \"+ totalPages);\r\n\t }\r\n }}\r\n  return (\r\n      <Container className=\"CharacterBar\" >\r\n\t  <Row xs=\"auto\" xl=\"auto\" className=\"CharacterBarRow\">\r\n\t  <Col fluid>\r\n        {status === \"loading\" ? (\r\n          \"Loading...\"\r\n        ) : status === \"error\" ? (\r\n          <span>Error: {error.message}</span>\r\n        ) : (\r\n          <>\r\n\t\t  \t<Row className=\"CharacterBarRow\">\r\n             {chararray.map((character,index)=>\r\n\t\t\t\t (\r\n\t\t\t\t<Col xl=\"auto\" xs=\"auto\" key={character.id}>\r\n\t\t\t\t<Card bg=\"black\" className=\"CharCard\" >\r\n\t\t\t\t <DockImage url={character.image.large} name={character.name.full} id={character.id} index={index}></DockImage>\r\n\t\t\t\t  <span className=\"CharName\">{character.name.full}</span>\r\n\r\n\t\t\t\t </Card>\r\n\t\t\t\t   </Col>\r\n                 ))}\r\n\t\t\t</Row>\r\n          </>\r\n        )}\r\n\t\t</Col>\r\n\t    </Row>\r\n\t\t<Row >\r\n\t\t\t<Col >\r\n\t\t\t\t<Button variant=\"outline-secondary\" onClick={()=>((page>1)?setPage(page-1):null)}><FaArrowLeft /></Button>\r\n\t\t\t</Col>\r\n\t\t\t<Col >\r\n\t\t\t\t<Button variant=\"outline-secondary\" onClick={()=>((page<totalPages)?setPage(page+1):null)}><FaArrowRight /></Button>\r\n\t\t\t</Col>\r\n\t\t</Row>\r\n      </Container>\r\n  );\r\n}\r\n\r\nfunction DockImage(props)\r\n{\r\n\tconst {url, name, index, id} = props;\r\n\tconst [{isDragging}, drag] = useDrag(()=>({\r\n\t\ttype: 'image',\r\n\t\titem: {id: id, name: name, url: url} ,\r\n\t\tcollect: (monitor) => ({\r\n\t\t\tisDragging: monitor.isDragging(),\r\n\t\t}),\r\n\t}));\r\n\treturn(\r\n\t\t<div ref={drag}>\r\n\t\t<img className=\"CharImg\" src={url} alt={name} index={index} key={id} / >\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction SearchBar(props){\r\n\tconst [searchPlaceHolder, setSearchPlaceHolder] = React.useState(\"Madoka Magica\");\r\n\treturn(\r\n\r\n\t <Container className=\"searchBarContainer\">\r\n\t <Form onSubmit={(e)=>{\r\n\t\t e.preventDefault();\r\n\t\t props.submitFunction(searchPlaceHolder);\r\n\t }}>\r\n\t <InputGroup className=\"mb-3\">\r\n\t <DropdownButton\r\n\t  title={props.queryType}\r\n\t  variant=\"outline-secondary\"\r\n\t  id=\"input-group-dropdown-1\"\r\n\t  onSelect={(e)=>props.setQueryType(e)}\r\n\t>\r\n\t  <Dropdown.Item eventKey=\"Anime\">Anime</Dropdown.Item>\r\n\t  <Dropdown.Item eventKey=\"Character\">Character</Dropdown.Item>\r\n\t</DropdownButton>\r\n\t\t<FormControl value={searchPlaceHolder} onChange={(e)=>{setSearchPlaceHolder(e.target.value)}}\r\n\t\t />\r\n\t  </InputGroup>\r\n\t </Form>\r\n\t </Container>\r\n\t);\r\n}\r\n\r\nfunction handleImageClick(){\r\n}\r\n// <img className=\"CharImg\" src={character.image.large} onClick={()=>props.handleImageClick(character.id, character.name.full, character.image.large)}/>\r\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\r\nimport { CloseButton, Button, Container, Row, Col, Image, InputGroup, FormControl} from 'react-bootstrap';\r\nimport { DndProvider, useDrag, useDrop,   } from 'react-dnd'\r\nimport { HTML5Backend } from 'react-dnd-html5-backend'\r\nimport { SketchPicker } from 'react-color';\r\n\r\nimport './rankingbar.css'\r\nimport update from 'immutability-helper';\r\n\r\n\r\nexport default function RankingBar(props)\r\n{\r\n\tconst [images, setImages] = useState([]);\r\n\tconst [dropLock, setDropLock] = useState(false);\r\n\tfunction handleDropImage(url, name, id, barindex){\r\n\r\n\t\t\tif(url && name && id)\r\n\t\t     {\r\n\t\t\t\t var image = {\r\n\t\t\t\t\t id: id,\r\n\t\t\t\t\t name: name,\r\n\t\t\t\t\t url: url,\r\n\t\t\t\t };\r\n\t\t\t\t \tconsole.log(\"url: \"+url+\" id: \"+id+\" name: \"+name);\r\n\t\t\t\t    setImages(images=>[...images, image]);\r\n\r\n\t\t\t}\r\n\r\n\t};\r\n\r\n\tfunction dropItem(item, to, barIndex){\r\n\t\tif(item.barIndex==props.barIndex)\r\n\t\t{\r\n\t\t\tlet from= item.index;\r\n\t\t\tconsole.log(\"from: \"+from+\" to: \"+to);\r\n\t\t\tlet newImages = [...images];\r\n\t\t\tlet item = newImages[from];\r\n\t\t\tnewImages.splice(from,1);\r\n\t\t\tnewImages.splice(to,0,item);\r\n\t\t\tsetImages(images=>[newImages]);\r\n\t}\r\n\t}\r\n\r\n\t// function handleRemoveRankingImage(index){\r\n\t//\r\n\t// \tsetImages(images=>update(images, {\r\n\t// \t\t$splice: [\r\n\t// \t\t\t[index, 1 ],\r\n\t// \t\t],\r\n\t// \t}));\r\n\t// \tconsole.log(\"Removing Image at Index \"+index+ \" \"+images[index].name);\r\n\t// \t// let array = [...images];\r\n\t// \t// array.splice(index,1);\r\n\t// \t// setImages(images=>([...array]));\r\n\t// };\r\n\tconst handleRemoveRankingImage = useCallback((index) =>{\r\n\t\t//\r\n\t\t// setImages(images=>update(images, {\r\n\t\t// \t$splice: [\r\n\t\t// \t\t[index, 1 ],\r\n\t\t// \t],\r\n\t\t// }));\r\n\t\t console.log(\"Removing Image at Index \"+index+ \" \"+images[index].name);\r\n\t\t// let array = [...images];\r\n\t\t// array.splice(index, 0);\r\n\t\t// console.log([...array]);\r\n\t\t// setImages(images=>([...array]));\r\n\t\tsetImages(images=>([...images.slice(0,index), ...images.slice(index+1)]));\r\n\t}, [images]);\r\n\tconst [{ canDrop, isOver }, drop] = useDrop(() => ({\r\n        accept: 'image',\r\n        drop: (item, monitor) => (\r\n\t\t\thandleDropImage(item.url, item.name, item.id, item.barIndex)\r\n\r\n\t\t),\r\n        collect: (monitor) => ({\r\n            isOver: monitor.isOver(),\r\n            canDrop: monitor.canDrop(),\r\n        }),\r\n    }));\r\n\r\n\t const isActive = canDrop && isOver;\r\n\t let backgroundColor = 'black';\r\n\t if (isActive) {\r\n\t\t backgroundColor = '#3fe74b';\r\n\t }\r\n\t else if (canDrop) {\r\n\t\t backgroundColor = '#3f92e7';\r\n\t }\r\n\t // return (\r\n\t\t//  <div ref={drop}  style={{backgroundColor }}>\r\n\t\t//  <Container className=\"RankingBar\" fluid>\r\n\t\t// \t <Row xs=\"auto\" xl=\"auto\" className=\"RankingRow\" noGutters>\r\n\t\t// \t <Col className=\"RankBoxCol\">\r\n\t\t// \t\t<RankBox color={props.color} text={props.text}></RankBox>\r\n\t\t// \t </Col>\r\n\t\t// \t <Col>\r\n\t\t// \t \t<Container  fluid>\r\n\t\t// \t \t\t<Row>\r\n\t\t// \t {\r\n\t //\r\n\t\t// \t\t images.map((image, index)=>\r\n\t\t// \t\t (\r\n\t\t// \t\t\t <Col key={index} className=\"RankingCol\" xl=\"auto\" xs=\"auto\">\r\n\t //\r\n\t\t// \t\t\t <Image className=\"RankingImage\" src={image.url} alt={image.name}  id={image.id} onClick={()=>{handleRemoveRankingImage(index)}}/>\r\n\t //\r\n\t //\r\n\t\t// \t\t\t </Col>\r\n\t\t// \t\t )\r\n\t\t// \t )\r\n\t\t// \t }\r\n\t\t// \t </Row>\r\n\t\t//  </Container>\r\n\t\t// \t </Col>\r\n\t\t// \t </Row>\r\n\t\t//  </Container>\r\n\t //\r\n\t\t//  </div>);\r\n\t\treturn (\r\n\t\t\t<div ref={drop}  style={{backgroundColor }}>\r\n\t\t\t<div className=\"RankingBar\">\r\n\t\t\t\t<div className=\"RankBoxCol\">\r\n\t\t\t\t   <RankBox color={props.color} index={props.index} handleChange={props.handleBoxChange} text={props.text}></RankBox>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"RankingImagesWrapper\">\r\n\r\n\t\t\t\t{\r\n\r\n\t\t\t\t\timages.map((image, index)=>\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\t<div key={index} className=\"RankingImgWrapper\">\r\n\r\n\r\n\t\t\t\t\t\t<RankingImage url={image.url} name={image.name} barIndex={index} index={index} dropItem={dropItem} handleRemove={handleRemoveRankingImage} id={image.id}/>\r\n\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t\t}\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n}\r\n\r\nfunction RankBox(props){\r\n\tconst [boxColor, setBoxColor] = useState(props.color);\r\n\tconst [text, setText] = useState(props.text);\r\n\tconst [fontsize, setFontSize] = useState(30);\r\n\tfunction handleColorChange(color, event){\r\n\t\t// props.handleChange(props.index, color, props.text);\r\n\t\tsetBoxColor(color.hex);\r\n\t};\r\n\tconst [clicked, setClicked] = useState(false);\r\n\tif(clicked)\r\n\t{return(\r\n\t\t<div>\r\n\t\t\t<div className=\"RankBox\" style={{backgroundColor: boxColor, fontSize: \"\"+fontsize+\"px\"}}  onClick={()=>setClicked(false)}>{text}</div>\r\n\t\t\t<div>\r\n\t\t\t\t<InputGroup>\r\n\t\t\t\t\t<FormControl value={text} className=\"boxTextInput\" onChange={(e)=>{setText(e.target.value)}}></FormControl>\r\n\t\t\t\t\t<FormControl value={fontsize} type=\"number\" className=\"boxFontInput\" onChange={(e)=>{setFontSize(e.target.value)}}></FormControl>\r\n\t\t\t\t\t<InputGroup.Text id=\"inputGroup-sizing-sm\">px</InputGroup.Text>\r\n\t\t\t\t</InputGroup>\r\n\t\t\t\t<SketchPicker\r\n\t\t\t\t color={boxColor}\r\n\t\t\t\t onChange={handleColorChange}\r\n\t\t\t\t presetColors={[\"#ED254E\",\"#FE9000\",\"#FFDD4A\", \"#59CD90\",\"#4C5760\"]}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);}else{\r\n\t\treturn(<div className=\"RankBox\" style={{backgroundColor: boxColor, fontSize: \"\"+fontsize+\"px\"}} onClick={()=>setClicked(true)}>{text}</div>);\r\n\t}\r\n}\r\n\r\n\r\nfunction RankingImage(props)\r\n{\r\n\tconst {url, name, index, id, barIndex} = props;\r\n\tconst [buttonStyle, setButtonStyle] =useState({display: 'none'});\r\n\r\n\tconst [{isDragging}, drag] = useDrag(()=>({\r\n\t\ttype: 'image',\r\n\t\titem: {id: id, name: name, url: url, index: index, barIndex: barIndex } ,\r\n\t\tend: (item, monitor) => {\r\n           props.handleRemove(index);\r\n        },\r\n\t\tcollect: (monitor) => ({\r\n\t\t\tisDragging: monitor.isDragging(),\r\n\t\t}),\r\n\t}), [props]);\r\n\r\n\treturn(\r\n\t\t<div ref={drag} onMouseEnter={e => {\r\n                     setButtonStyle({display: 'block'});\r\n                 }}\r\n                 onMouseLeave={e => {\r\n                     setButtonStyle({display: 'none'})\r\n                 }} className=\"RankingImgWrapper\">\r\n\t\t<img src={url}  className=\"RankingImg\" alt={name} index={index} key={id} / >\r\n\t\t<button style={buttonStyle} className=\"DltButton\" onClick={()=>props.handleRemove(index)}>X</button>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {FaRegTrashAlt} from \"react-icons/fa\";\r\nimport {FiPlus, FiCamera} from \"react-icons/fi\";\r\nimport { TouchBackend } from 'react-dnd-touch-backend';\r\nimport {saveAs} from 'file-saver';\r\nimport domtoimage from 'dom-to-image';\r\nimport { CloseButton, Button, Container, Row, Col, Image, ButtonGroup} from 'react-bootstrap';\r\nimport { DndProvider, useDrag, useDrop } from 'react-dnd'\r\nimport { HTML5Backend } from 'react-dnd-html5-backend'\r\nimport QueryComponent from './query.js'\r\nimport RankingBar from './rankingbar.js'\r\nimport download from 'downloadjs';\r\nimport './dock.css'\r\n const MainComponent=()=>{\r\n\r\n\tconst[bars,setBars]=useState([\r\n\t\t{\r\n\t\t\tcolor: \"#ED254E\",\r\n\t\t\ttext: \"S\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tcolor: \"#FE9000\",\r\n\t\t\ttext: \"A\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tcolor: \"#FFDD4A\",\r\n\t\t\ttext: \"B\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tcolor: \"#59CD90\",\r\n\t\t\ttext: \"C\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tcolor: \"#4C5760\",\r\n\t\t\ttext: \"D\",\r\n\t\t},\r\n\t\t]);\r\n\r\n\tfunction pushBar(){\r\n\t\tvar newBar;\r\n\t\tswitch(bars.length){\r\n\t\t\tcase 0:\r\n\t\t\t\tnewBar = {\r\n\t\t\t\t\tcolor: \"#ED254E\",\r\n\t\t\t\t\ttext: \"S\",\r\n\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\tnewBar = {\r\n\t\t\t\t\tcolor: \"#FE9000\",\r\n\t\t\t\t\ttext: \"A\",\r\n\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tnewBar = {\r\n\t\t\t\t\tcolor: \"#FFDD4A\",\r\n\t\t\t\t\ttext: \"B\",\r\n\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tnewBar ={\r\n\t\t\t\t\tcolor: \"#59CD90\",\r\n\t\t\t\t\ttext: \"C\",\r\n\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4:\r\n\t\t\t\tnewBar = {\r\n\t\t\t\t\tcolor: \"#4C5760\",\r\n\t\t\t\t\ttext: \"D\",\r\n\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tnewBar = {\r\n\t\t\t\t\tcolor: \"#4C5760\",\r\n\t\t\t\t\ttext: bars.length<26? String.fromCharCode(64+bars.length) : \"?\",\r\n\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tsetBars(bars=>[...bars, newBar,]);\r\n\t};\r\n\r\n\tfunction popBar(){\r\n\t\tlet newbars = [...bars];\r\n\t\tnewbars.pop();\r\n\t\tsetBars(bars=>[...newbars]);\r\n\t};\r\n\tfunction handleBarChange(index, color, text){\r\n\t \tlet temp_bars = [...bars];\r\n\t\ttemp_bars[index] = {\r\n\t\t\tcolor: color,\r\n\t\t\ttext: text\r\n\t\t};\r\n\t\tsetBars(bars=>[...temp_bars]);\r\n\t};\r\n\treturn(\r\n\t\t<DndProvider backend={('ontouchstart' in window)? \tTouchBackend : HTML5Backend}>\r\n\t\t<Container fluid>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col md=\"auto\" className=\"QueryColumn\">\r\n\t\t\t\t\t<QueryComponent></QueryComponent>\r\n\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col className=\"ChartContainer\">\r\n\t\t\t\t\t\t\t<div className=\"ChartContainerBarsWrapper\">\r\n\t\t\t\t\t\t\t<div id=\"ScreenshotElement\" >\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tbars.map((bar,index)=>(\r\n\t\t\t\t\t\t\t\t\t<Row key={index}>\r\n\t\t\t\t\t\t\t\t\t<Col >\r\n\t\t\t\t\t\t\t\t\t\t<RankingBar color={bar.color} text={bar.text} index={index} handleBoxChange={handleBarChange}></RankingBar>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<Row className=\"justify-content-md-end\">\r\n\t\t\t\t\t\t\t<Col  md=\"auto\">\r\n\t\t\t\t\t\t\t\t<ButtonGroup className=\"mr-4 pt-4\">\r\n\t\t\t\t\t\t\t\t\t<Button variant=\"outline-secondary\" onClick={()=>pushBar()}><FiPlus /></Button>\r\n\t\t\t\t\t\t\t\t\t<Button variant=\"outline-secondary\" onClick={()=>popBar()}><FaRegTrashAlt /></Button>\r\n\t\t\t\t\t\t\t\t\t<Button onClick={()=>domtoimage.toBlob(document.getElementById('ScreenshotElement'))\r\n\t\t\t\t\t\t\t\t    .then(function (blob) {\r\n\t\t\t\t\t\t\t\t        saveAs(blob, 'chart.png');\r\n\t\t\t\t\t\t\t\t    })}\r\n\t\t\t\t\t\t\t\t\tvariant=\"outline-secondary\"><FiCamera /></Button>\r\n\t\t\t\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t\t\t</Col>\r\n\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\t\t</DndProvider>\r\n\t);\r\n};\r\nexport default MainComponent;\r\n","import logo from './logo.svg';\nimport './App.css';\nimport MainComponent from './MainComponent.js'\nfunction App() {\n  return (\n\n    <div className=\"App\">\n   <MainComponent />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n const queryClient = new QueryClient();\nReactDOM.render(\n  <React.StrictMode>\n  <QueryClientProvider client={queryClient}>\n    <App />\n\t</QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}